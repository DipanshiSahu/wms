var mongoose = require('mongoose');
var Schema = mongoose.Schema;

const schemeisinmaster = new Schema({
    Id: { type: Number },
    ISIN: { type: String },
    Schemecode: { type: Number },
    Amc_code: { type: String },
    NseSymbol: { type: String },
    Series: { type: String },
    RTASchemecode: { type: String },
    AMCSchemecode: { type: String },
    LongSchemeDescrip: { type: String },
    ShortSchemeDescrip: { type: String },
    Status: { type: String },
    flag: { type: String },

}, { versionKey: false });

const schememaster = new Schema({
    schemecode: { type: String },
    amc_code: { type: String },
    scheme_name: { type: String },
    color: { type: String },
    flag: { type: String },
}, { versionKey: false });

const schemedetail = new Schema({
    schemecode: { type: String },
    amfi_code: { type: String },
    cams_code: { type: String },
    amc_code: { type: String },
    s_name: { type: String },
    amfi_name: { type: String },
    isin_code: { type: String },
    type_code: { type: String },
    opt_code: { type: String },
    classcode: { type: String },
    theme_code: { type: String },
    rt_code: { type: String },
    plan: { type: String },
    cust_code: { type: String },
    cust_code2: { type: String },
    price_freq: { type: String },
    init_price: { type: String },
    offerprice: { type: String },
    nfo_open: { type: String },
    nfo_close: { type: String },
    reopen_dt: { type: String },
    elf: { type: String },
    etf: { type: String },
    stp: { type: String },
    primary_fund: { type: String },
    primary_fd_code: { type: String },
    sip: { type: String },
    swp: { type: String },
    switch: { type: String },
    mininvt: { type: String },
    multiples: { type: String },
    inc_invest: { type: String },
    adnmultiples: { type: String },
    fund_mgr1: { type: String },
    fund_mgr2: { type: String },
    fund_mgr3: { type: String },
    fund_mgr4: { type: String },
    since: { type: String },
    status: { type: String },
    cutsub: { type: String },
    cutred: { type: String },
    red: { type: String },
    mob_name: { type: String },
    div_freq: { type: String },
    scheme_symbol: { type: String },
    fund_mgr_code1: { type: String },
    FUND_MGR_CODE2: { type: String },
    FUND_MGR_CODE3: { type: String },
    FUND_MGR_CODE4: { type: String },
    Redemption_date: { type: String },
    DateOfAllot: { type: String },
    Div_Code: { type: String },
    LegalNames: { type: String },
    AMFIType: { type: String },
    NonTxnDay: { type: String },
    SchemeBank: { type: String },
    SchemeBankAccountNumber: { type: String },
    SchemeBankBranch: { type: String },
    DividendOptionFlag: { type: String },
    LockIn: { type: String },
    IsPurchaseAvailable: { type: String },
    IsRedeemAvailable: { type: String },
    MinRedemptionAmount: { type: String },
    RedemptionMultipleAmount: { type: String },
    MinRedemptionUnits: { type: String },
    MinSwitchAmount: { type: String },
    SwitchMultipleAmount: { type: String },
    MinSwitchUnits: { type: String },
    SwitchMultiplesUnits: { type: String },
    securitycode: { type: String },
    unit: { type: String },
    SwitchOut: { type: String },
    MinSwitchOutAmount: { type: String },
    SwitchOutMultipleAmount: { type: String },
    MinSwitchOutUnits: { type: String },
    SwitchOutMultiplesUnits: { type: String },
    Incept_date: { type: String },
    Incept_Nav: { type: String },
    DefaultOpt: { type: String },
    DefaultPlan: { type: String },
    LockPeriod: { type: String },
    ODDraftDate: { type: String },
    Liquidated_Date: { type: String },
    Old_Plan: { type: String },
    Direct_Plan: { type: String },
    optionType: { type: String },
    flag: { type: String },
}, { versionKey: false });

const mfabsreturn = new Schema({
    schemecode: { type: Number },
    c_date: { type: Date },
    p_date: { type: Date },
    c_nav: { type: Number },
    p_nav: { type: Number },
    onedayret: { type: String },
    oneweekdate: { type: Date },
    oneweeknav: { type: String },
    oneweekret: { type: String },
    onemthdate: { type: Date },
    onemthnav: { type: String },
    onemonthret: { type: String },
    threemthdate: { type: Date },
    threemthnav: { type: String },
    threemonthret: { type: String },
    sixmntdate: { type: Date },
    sixmnthnav: { type: String },
    sixmonthret: { type: String },
    ninemnthdate: { type: Date },
    ninemnthnav: { type: String },
    ninemnthret: { type: String },
    oneyrdate: { type: Date },
    oneyrnav: { type: String },
    oneyrret: { type: String },
    twoyrdate: { type: Date },
    twoyrnav: { type: String },
    twoyearret: { type: String },
    threeyrdate: { type: Date },
    threeyrnav: { type: String },
    threeyearret: { type: String },
    fouryrdate: { type: Date },
    fouryrnav: { type: String },
    fouryearret: { type: String },
    fiveyrdate: { type: Date },
    fiveyrnav: { type: String },
    fiveyearret: { type: String },
    incdate: { type: Date },
    incnav: { type: String },
    incret: { type: String },
    flag: { type: String },
}, { versionKey: false });

const mfansreturn = new Schema({
    schemecode: { type: Number },
    c_date: { type: Date },
    p_date: { type: Date },
    c_nav: { type: Number },
    p_nav: { type: Number },
    onedayret: { type: String },
    oneweekdate: { type: Date },
    oneweeknav: { type: String },
    oneweekret: { type: String },
    onemthdate: { type: Date },
    onemthnav: { type: String },
    onemonthret: { type: String },
    threemthdate: { type: Date },
    threemthnav: { type: String },
    threemonthret: { type: String },
    sixmntdate: { type: Date },
    sixmnthnav: { type: String },
    sixmonthret: { type: String },
    ninemnthdate: { type: Date },
    ninemnthnav: { type: String },
    ninemnthret: { type: String },
    oneyrdate: { type: Date },
    oneyrnav: { type: String },
    oneyrret: { type: String },
    twoyrdate: { type: Date },
    twoyrnav: { type: String },
    twoyearret: { type: String },
    threeyrdate: { type: Date },
    threeyrnav: { type: String },
    threeyearret: { type: String },
    fouryrdate: { type: Date },
    fouryrnav: { type: String },
    fouryearret: { type: String },
    fiveyrdate: { type: Date },
    fiveyrnav: { type: String },
    fiveyearret: { type: String },
    incdate: { type: Date },
    incnav: { type: String },
    incret: { type: String },
    flag: { type: String },
}, { versionKey: false });

const classWiseReturn = new Schema({
    classcode: { type: Number },
    classname: { type: String },
    opt_code: { type: Number },
    date: { type: Date },
    onedayret: { type: String },
    oneweekret: { type: String },
    twoweekret: { type: String },
    threeweekret: { type: String },
    onemonthret: { type: String },
    twomonthret: { type: String },
    threemonthret: { type: String },
    sixmonthret: { type: String },
    ninemnthret: { type: String },
    oneyearret: { type: String },
    twoyearret: { type: String },
    threeyearret: { type: String },
    fouryearret: { type: String },
    fiveyearret: { type: String },
    incret: { type: String },
    ytdret: { type: String },
    onewschemecode: { type: String },
    weekHighRet: { type: String },
    onemschemecode: { type: String },
    monthhighret: { type: String },
    threemschemecode: { type: String },
    threemonthHighret: { type: String },
    sixmschemecode: { type: String },
    sixmonthhighret: { type: String },
    oneyhighret: { type: String },
    threeyschemecode: { type: String },
    threeyhighret: { type: String },
    fiveyschemecode: { type: String },
    fiveyhighret: { type: String },
    incretschemecode: { type: String },
    increthighret: { type: String },
    worst1wSchemecode: { type: String },
    weekWorstRet: { type: String },
    worst1mschemecode: { type: String },
    monthworstret: { type: String },
    worst3mschemecode: { type: String },
    threemonthworstret: { type: String },
    worst6mschemecode: { type: String },
    sixmonthWorstRet: { type: String },
    worst1yschemecode: { type: String },
    oneyworstret: { type: String },
    worst3yschemecode: { type: String },
    threeyworstret: { type: String },
    worst5yschemecode: { type: String },
    fiveyworstret: { type: String },
    Worstincretschemecode: { type: String },
    incretworstret: { type: String },
    flag: { type: String },
}, { versionKey: false });

const mfreturn = new Schema({
    schemecode: { type: Number },
    c_date: { type: Date },
    p_date: { type: Date },
    c_nav: { type: Number },
    p_nav: { type: Number },
    onedayret: { type: String },
    oneweekdate: { type: Date },
    oneweeknav: { type: String },
    oneweekret: { type: String },
    onemthdate: { type: Date },
    onemthnav: { type: String },
    onemonthret: { type: String },
    threemthdate: { type: Date },
    threemthnav: { type: String },
    threemonthret: { type: String },
    sixmntdate: { type: Date },
    sixmnthnav: { type: String },
    sixmonthret: { type: String },
    ninemnthdate: { type: Date },
    ninemnthnav: { type: String },
    ninemnthret: { type: String },
    oneyrdate: { type: Date },
    oneyrnav: { type: String },
    oneyrret: { type: String },
    twoyrdate: { type: Date },
    twoyrnav: { type: String },
    twoyearret: { type: String },
    threeyrdate: { type: Date },
    threeyrnav: { type: String },
    threeyearret: { type: String },
    fouryrdate: { type: Date },
    fouryrnav: { type: String },
    fouryearret: { type: String },
    fiveyrdate: { type: Date },
    fiveyrnav: { type: String },
    fiveyearret: { type: String },
    incdate: { type: Date },
    incnav: { type: String },
    incret: { type: String },
    flag: { type: String },
}, { versionKey: false });

var scheme_isinmaster = mongoose.model('scheme_isinmaster', schemeisinmaster, 'scheme_isinmaster')
var scheme_master = mongoose.model('scheme_master', schememaster, 'scheme_master')
var scheme_detail = mongoose.model('scheme_detail', schemedetail, 'scheme_detail')
var mf_abs_return = mongoose.model('mf_abs_return', mfabsreturn, 'mf_abs_return')
var mf_ans_return = mongoose.model('mf_ans_return', mfansreturn, 'mf_ans_return')
var class_WiseReturn = mongoose.model('class_WiseReturn', classWiseReturn, 'class_WiseReturn')
var mf_return = mongoose.model('mf_return', mfreturn, 'mf_return')

module.exports = {scheme_isinmaster ,scheme_master ,scheme_detail ,mf_abs_return ,mf_ans_return ,class_WiseReturn ,mf_return};